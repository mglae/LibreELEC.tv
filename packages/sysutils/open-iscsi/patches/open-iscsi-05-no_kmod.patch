--- a/libopeniscsiusr/iface.c	2020-12-18 19:58:08.000000000 +0100
+++ b/libopeniscsiusr/iface.c	2021-01-27 23:51:08.194993735 +0100
@@ -33,7 +33,6 @@
 #include <sys/stat.h>
 #include <sys/wait.h>
 #include <stdbool.h>
-#include <libkmod.h>
 #include <limits.h>
 
 #include "libopeniscsiusr/libopeniscsiusr.h"
@@ -70,7 +69,6 @@ const struct iscsi_iface _DEFAULT_IFACES
 	},
 };
 
-static int _load_kernel_module(struct iscsi_context *ctx, const char *drv_name);
 static int _iface_conf_write(struct iscsi_context *ctx,
 			     struct iscsi_iface *iface);
 static int _fill_hw_iface_from_sys(struct iscsi_context *ctx,
@@ -371,11 +369,8 @@ int iscsi_default_iface_setup(struct isc
 			if (_iscsi_transport_is_loaded(ind->transport_name))
 				continue;
 
-			_debug(ctx, "Loading kernel module %s for iSCSI "
-			       "offload on %s(%s)", ind->iscsi_driver_name,
-			       eifs[i]->if_name, eifs[i]->driver_name);
-			_good(_load_kernel_module(ctx, ind->iscsi_driver_name),
-			      rc, out);
+			rc = LIBISCSI_ERR_BUG;
+			goto out;
 		}
 	}
 
@@ -415,36 +410,6 @@ out:
 	return rc;
 }
 
-static int _load_kernel_module(struct iscsi_context *ctx, const char *drv_name)
-{
-	struct kmod_ctx *kctx = NULL;
-	struct kmod_module *mod = NULL;
-	int rc = LIBISCSI_OK;
-
-	kctx = kmod_new(NULL, NULL);
-	_alloc_null_check(ctx, kctx, rc, out);
-
-	kmod_load_resources(kctx);
-
-	if (kmod_module_new_from_name(kctx, drv_name, &mod)) {
-		_error(ctx, "Failed to load module %s.", drv_name);
-		rc = LIBISCSI_ERR_TRANS_NOT_FOUND;
-		goto out;
-	}
-
-	if (kmod_module_probe_insert_module(mod, KMOD_PROBE_APPLY_BLACKLIST,
-					    NULL, NULL, NULL, NULL)) {
-		_error(ctx, "Could not insert module %s. Kmod error %d",
-		       drv_name, rc);
-		rc = LIBISCSI_ERR_TRANS_NOT_FOUND;
-	}
-	kmod_module_unref(mod);
-
-out:
-	if (kctx != NULL)
-		kmod_unref(kctx);
-	return rc;
-}
 
 static int _iface_conf_write(struct iscsi_context *ctx,
 			     struct iscsi_iface *iface)
--- a/usr/transport.c	2020-12-18 19:58:08.000000000 +0100
+++ b/usr/transport.c	2021-01-27 23:52:41.892917605 +0100
@@ -19,7 +19,6 @@
 #include <stdio.h>
 #include <unistd.h>
 #include <errno.h>
-#include <libkmod.h>
 #include <net/if.h>
 #include <sys/ioctl.h>
 #include <sys/socket.h>
@@ -192,47 +191,8 @@ free_ifni:
  */
 int transport_load_kmod(char *transport_name)
 {
-	struct kmod_ctx *ctx;
-	struct kmod_module *mod;
-	int rc;
-
-	ctx = kmod_new(NULL, NULL);
-	if (!ctx) {
-		log_error("Could not load transport module %s. Out of "
-			  "memory.", transport_name);
-		return ISCSI_ERR_NOMEM;
-	}
-
-	kmod_load_resources(ctx);
-
-	/*
-	 * dumb dumb dumb - named iscsi_tcp and ib_iser differently from
-	 * transport name
-	 */
-	if (!strcmp(transport_name, "tcp"))
-		rc = kmod_module_new_from_name(ctx, "iscsi_tcp", &mod);
-	else if (!strcmp(transport_name, "iser"))
-		rc = kmod_module_new_from_name(ctx, "ib_iser", &mod);
-	else
-		rc = kmod_module_new_from_name(ctx, transport_name, &mod);
-	if (rc) {
-		log_error("Failed to load module %s.", transport_name);
-		rc = ISCSI_ERR_TRANS_NOT_FOUND;
-		goto unref_mod;
-	}
-
-	rc = kmod_module_probe_insert_module(mod, KMOD_PROBE_APPLY_BLACKLIST,
-					     NULL, NULL, NULL, NULL);
-	if (rc) {
-		log_error("Could not insert module %s. Kmod error %d",
-			  transport_name, rc);
-		rc = ISCSI_ERR_TRANS_NOT_FOUND;
-	}
-	kmod_module_unref(mod);
-
-unref_mod:
-	kmod_unref(ctx);
-	return rc;
+	(void)transport_name;
+	return ISCSI_ERR_TRANS_NOT_FOUND;
 }
 
 int set_transport_template(struct iscsi_transport *t)
